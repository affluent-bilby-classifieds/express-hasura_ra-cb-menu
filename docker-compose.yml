version: '2'
services:

  nginx-front:
    image: nginx:stable
    ports:
      - "3000:80"
    volumes:
      - ./nginx-front.conf:/etc/nginx/nginx.conf
    links:
      - front
      - back

  front:
    image: node:10 
    ports:
      - "3001:3000"
    environment:
      REACT_EDITOR: atom
    volumes:
     - ./front:/home/app
     - ./build.sh:/build.sh
    entrypoint:  "/build.sh" 


  back:
    image: node:10
    #command: ["/bin/sh", "-c","cd /home/app && npm run dev"]
    volumes:
     - ./back:/home/app
     - ./build.sh:/build.sh
    environment:
      PGUSER: ${PG_USER}
      PGPASSWORD: ${PG_PASSWORD}
      PGDATABASE: ${PG_DATABASE}
      PGHOST: postgres
    links:
      - postgres
    entrypoint:  "/build.sh"   


  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - data:/var/lib/postgresql/data
     #- ./db:/init
     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
     #https://gist.github.com/onjin/2dd3cc52ef79069de1faa2dfd456c945

  pgweb:
    image: sosedoff/pgweb
    command: pgweb --readonly --bind=0.0.0.0 --listen=8081
    ports: ["5000:8081"]
    links:
      - postgres:postgres
    environment:
      - DATABASE_URL=postgres://${PG_USER}:${PG_PASSWORD}@postgres:5432/${PG_DATABASE}?sslmode=disable
    depends_on:
      - postgres

volumes:
  data: {}
